DROP TABLE IF EXISTS USER_ROLES;
DROP TABLE IF EXISTS RESTAURANTS;
DROP TABLE IF EXISTS VOTES;
DROP TABLE IF EXISTS DISHES;
DROP TABLE IF EXISTS USERS;
DROP SEQUENCE IF EXISTS GLOBAL_SEQ;
DROP TRIGGER  IF EXISTS TRIG_ELEVEN;

CREATE SEQUENCE GLOBAL_SEQ START WITH 100000;

CREATE TABLE USERS
(
    ID         INTEGER   DEFAULT NEXTVAL('GLOBAL_SEQ') PRIMARY KEY,
    NAME       VARCHAR                 NOT NULL,
    EMAIL      VARCHAR                 NOT NULL,
    PASSWORD   VARCHAR                 NOT NULL,
    REGISTERED TIMESTAMP DEFAULT NOW() NOT NULL,
    ENABLED    BOOL      DEFAULT TRUE  NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx ON USERS (EMAIL);

CREATE TABLE DISHES
(
    ID            INTEGER DEFAULT NEXTVAL('GLOBAL_SEQ') PRIMARY KEY,
    DISH_NAME     VARCHAR                   NOT NULL,
    PRICE         INTEGER                   NOT NULL,
    RESTAURANT_ID INTEGER                   NOT NULL,
    DATE          DATE    DEFAULT CURDATE() NOT NULL
);
CREATE UNIQUE INDEX dishes_unique_restaurant_dish_date_idx ON dishes (RESTAURANT_ID, DISH_NAME, DATE);

CREATE TABLE VOTES
(
    ID            INTEGER DEFAULT NEXTVAL('GLOBAL_SEQ') PRIMARY KEY,
    USER_ID       INTEGER                      NOT NULL,
    RESTAURANT_ID INTEGER                      NOT NULL,
    DATE          DATE    DEFAULT CURDATE()    NOT NULL,
    TIME          TIME    DEFAULT CURRENT_TIME NOT NULL
);
CREATE UNIQUE INDEX votes_unique_user_date_idx ON VOTES (USER_ID, DATE);
-- CREATE TRIGGER TRIG_ELEVEN BEFORE INSERT, UPDATE ON VOTES FOR EACH ROW CALL "ru.shlanlinec.graduation.mealservice.util.TriggerH";

CREATE TABLE USER_ROLES
(
    USER_ID INTEGER NOT NULL,
    ROLE    VARCHAR,
    CONSTRAINT user_roles_idx UNIQUE (USER_ID, ROLE),
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

CREATE TABLE RESTAURANTS
(
    ID      INTEGER DEFAULT NEXTVAL('GLOBAL_SEQ') PRIMARY KEY,
    NAME    VARCHAR_IGNORECASE NOT NULL UNIQUE,
    ADDRESS VARCHAR            NOT NULL
)